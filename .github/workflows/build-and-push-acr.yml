name: Build and Push Docker Image to ACR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK (Java Development Kit)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # This uses the OpenJDK distribution
          java-version: '17'

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Step 4: Build the JAR using Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Step 5: Log in to ACR using username and password
      - name: Log in to ACR
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_NAME }}.azurecr.io --username ${{ secrets.ACR_USERNAME }} --password-stdin

      # Step 6: Build the Docker image
      - name: Build Docker image
        run: |
          docker build . -t ${{ secrets.ACR_NAME }}.azurecr.io/chatapp:latest

      # Step 7: Push the Docker image to ACR
      - name: Push Docker image
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/chatapp:latest
